INTEGRATION TO MAIN BRANCH: Library implementation
---
>> Check 1: Benutzt die neu Datenstruktur <<
>> Check 2: Bibliothek hat ein KundenArchiv <<
>> Check 3: Bibliothek hat ein Kundendatenformatierer <<
-----------------------------------------------------
CMAKE: CONFIGURE START ------------ 
-- The C compiler identification is GNU 11.4.0
-- The CXX compiler identification is GNU 11.4.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE  
-- Configuring done (0.7s)
-- Generating done (0.0s)
-- Build files have been written to: /home/htc-ws-001-hm/Desktop/Workspace/dev/cxx/projectBuilds/remote-assessment-cpp
CMAKE: CONFIGURE END ------------ 
CMAKE: BUILD START ------------ 
[  5%] Building CXX object CMakeFiles/KundenDaten.dir/lib/src/KundenArchiv.cpp.o
[ 10%] Building CXX object CMakeFiles/KundenDaten.dir/lib/src/KundenDataFormatter.cpp.o
[ 15%] Building CXX object CMakeFiles/KundenDaten.dir/lib/src/KundenSpeichern.cpp.o
[ 20%] Linking CXX static library libKundenDaten.a
[ 20%] Built target KundenDaten
[ 25%] Building CXX object CMakeFiles/unittestAlteHeaderLegacyC.dir/test/aufgabeOneHeaderRefactor/unittestAlteHeaderLegacyC.cc.o
[ 30%] Linking CXX executable unittestAlteHeaderLegacyC
[ 30%] Built target unittestAlteHeaderLegacyC
[ 35%] Building CXX object CMakeFiles/unittestAlteHeaderLegacyCpp.dir/test/aufgabeOneHeaderRefactor/unittestAlteHeaderLegacyCpp.cpp.o
[ 40%] Linking CXX executable unittestAlteHeaderLegacyCpp
[ 40%] Built target unittestAlteHeaderLegacyCpp
[ 45%] Building CXX object CMakeFiles/unittestHeaderRefactoredCxx.dir/test/aufgabeOneHeaderRefactor/unittestHeaderRefactoredCxx.cpp.o
[ 50%] Linking CXX executable unittestHeaderRefactoredCxx
[ 50%] Built target unittestHeaderRefactoredCxx
[ 55%] Building CXX object CMakeFiles/unittestsKundenArchiv.dir/test/aufgabeTwoImplLib/unittestsKundenArchiv.cpp.o
[ 60%] Linking CXX executable unittestsKundenArchiv
[ 60%] Built target unittestsKundenArchiv
[ 65%] Building CXX object CMakeFiles/unittestKundenDataFormatter.dir/test/aufgabeTwoImplLib/unittestKundenDataFormatter.cpp.o
[ 70%] Linking CXX executable unittestKundenDataFormatter
[ 70%] Built target unittestKundenDataFormatter
[ 75%] Building CXX object CMakeFiles/unittestLibraryExtension.dir/test/aufgabeTwoImplLib/unittestLibraryExtension.cpp.o
[ 80%] Linking CXX executable unittestLibraryExtension
[ 80%] Built target unittestLibraryExtension
[ 85%] Building CXX object CMakeFiles/Kunden_cli.dir/customer-cli/customer.cpp.o
[ 90%] Linking CXX executable Kunden_cli
[ 90%] Built target Kunden_cli
[ 95%] Building CXX object CMakeFiles/unittestKundenCli.dir/test/aufgabeThreeKundenCli/unittestKundenCli.cpp.o
[100%] Linking CXX executable unittestKundenCli
[100%] Built target unittestKundenCli
CMAKE: BUILD END------------ 
UNIT TESTS: START ------------ 
>> Check 4: Ein Bibliothek das kunden data speichern kann <<
>> Check 5: Kann Kunden hinzufügen <<
>> Check 6: Alle kunden ausgeben <<
>> Check 7: Kundendaten zu einer ID ausgeben <<
-----------------------------------------------------
Running main() from /home/htc-ws-001-hm/Desktop/Workspace/dev/cxx/dependencies/googletest/googletest/src/gtest_main.cc
[==========] Running 5 tests from 1 test suite.
[----------] Global test environment set-up.
[----------] 5 tests from KundenDatenLibKlassKundenArchiv
[ RUN ] KundenDatenLibKlassKundenArchiv.BenutztNeuDatenStructure
[ OK ] KundenDatenLibKlassKundenArchiv.BenutztNeuDatenStructure (0 ms)
[ RUN ] KundenDatenLibKlassKundenArchiv.KundenHinfügen
[ OK ] KundenDatenLibKlassKundenArchiv.KundenHinfügen (0 ms)
[ RUN ] KundenDatenLibKlassKundenArchiv.AlleKundenAusgeben
[ OK ] KundenDatenLibKlassKundenArchiv.AlleKundenAusgeben (0 ms)
[ RUN ] KundenDatenLibKlassKundenArchiv.KundenDatenzuEinID
[ OK ] KundenDatenLibKlassKundenArchiv.KundenDatenzuEinID (0 ms)
[ RUN ] KundenDatenLibKlassKundenArchiv.CustomerLookupNonExistingIds
[ OK ] KundenDatenLibKlassKundenArchiv.CustomerLookupNonExistingIds (0 ms)
[----------] 5 tests from KundenDatenLibKlassKundenArchiv (0 ms total)

[----------] Global test environment tear-down
[==========] 5 tests from 1 test suite ran. (0 ms total)
[ PASSED ] 5 tests.
-----------------------------------------------------
UNIT TESTS: START ------------ 
>> Check 8: Ein Formatted Kunden Daten für ein ID <<
>> Check 9: Gultig ID: <Nachname>, <Vorname>, <Postleitzahl> <Stadt>, <Lieblingsfarbe> <<
>> Check 10: Ungultig ID: (kein kunde) <<
>> Check 11: Der Kundendatenformatierer ruft die Kundendaten selbständig aus dem Kunden-Archiv <<
-----------------------------------------------------
Running main() from /home/htc-ws-001-hm/Desktop/Workspace/dev/cxx/dependencies/googletest/googletest/src/gtest_main.cc
[==========] Running 2 tests from 2 test suites.
[----------] Global test environment set-up.
[----------] 1 test from KundenDatenFormattierer
[ RUN ] KundenDatenFormattierer.DataFormattedByGultigID
[ OK ] KundenDatenFormattierer.DataFormattedByGultigID (0 ms)
[----------] 1 test from KundenDatenFormattierer (0 ms total)

[----------] 1 test from CustomerDataFormatter
[ RUN ] CustomerDataFormatter.DataFormattedByUngultigID
[ OK ] CustomerDataFormatter.DataFormattedByUngultigID (0 ms)
[----------] 1 test from CustomerDataFormatter (0 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 2 test suites ran. (0 ms total)
[ PASSED ] 2 tests.
-----------------------------------------------------
UNIT TESTS: START ------------ 
>> Check 12: Unit-Tests sollten mocked dependencies benutzen <<
>> Check 13: Kundendaten auch woanders speichern kann z.B. DB, TextDatei, Cloud <<
Running main() from /home/htc-ws-001-hm/Desktop/Workspace/dev/cxx/dependencies/googletest/googletest/src/gtest_main.cc
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from MockDependencyKundenDatenSpeichernVerfahren
[ RUN ] MockDependencyKundenDatenSpeichernVerfahren.KundenDatenExtensionOpenFunktion
Opening file for read/write operations.
Saving data to text file
Closing text file with FD: -1
Establishing connection with the cloud
Writing data to cloud
Closing the connection to the cloud with ID: -1
Connecting to the Database:
Saving to the database:
Closing the Database connection with ID: -1
[ OK ] MockDependencyKundenDatenSpeichernVerfahren.KundenDatenExtensionOpenFunktion (0 ms)
[----------] 1 test from MockDependencyKundenDatenSpeichernVerfahren (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (0 ms total)
[ PASSED ] 1 test.
-----------------------------------------------------
UNIT TESTS: END ------------ 
Aufgabe 2: End of Integration test
